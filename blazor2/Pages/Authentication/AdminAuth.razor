@page "/admin-auth"
@* @attribute [Authorize(Roles = "Admin")] *@
@* 1. @attribute [Authorize(Roles = "Admin")]

ƒê√¢y l√† attribute ·ªü c·∫•p trang (component).

Khi Blazor Router load page, n√≥ s·∫Ω check role tr∆∞·ªõc khi render.

N·∫øu user kh√¥ng c√≥ role "Admin" th√¨:

Trang kh√¥ng ƒë∆∞·ª£c render.

Router tr·∫£ v·ªÅ tr·∫°ng th√°i NotAuthorized (hi·ªÉn th·ªã t·ª´ AuthorizeRouteView trong App.razor).

üëâ D√πng khi b·∫°n mu·ªën ch·∫∑n c·ª©ng truy c·∫≠p v√†o m·ªôt page.
V√≠ d·ª•: /admin-auth ch·ªâ cho Admin v√†o, User th∆∞·ªùng kh√¥ng bao gi·ªù v√†o ƒë∆∞·ª£c. *@
@using Microsoft.AspNetCore.Components.Authorization
@* N√≥ cho ph√©p b·∫°n d√πng:

AuthenticationStateProvider

AuthorizeView

AuthenticationState

c√°c API authorization kh√°c‚Ä¶

N√≥ kh√¥ng ch·∫∑n quy·ªÅn truy c·∫≠p, ch·ªâ m·ªü s·∫µn namespace ƒë·ªÉ b·∫°n g·ªçi class/razor component m√† th√¥i.

üëâ N·∫øu b·∫°n kh√¥ng import d√≤ng n√†y, th√¨ vi·∫øt <AuthorizeView> hay AuthenticationStateProvider s·∫Ω b·ªã b√°o l·ªói kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c t√™n. *@

@inject AuthenticationStateProvider AuthProvider

<AuthorizeView Roles="Admin" Context="authContext">
    <Authorized>
        <div class="container mt-3">
            <h3>Admin Auth</h3>
            <p>This is a protected page. You must be logged in to view this content.</p>
            <p>D√†nh cho ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p (Admin)</p>
            <p>Welcome, @authContext.User.Identity.Name!</p>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container mt-3">
            <div class="alert alert-warning">
                <h4>Access Denied</h4>
                <p>You need admin privileges to access this page.</p>
                <a href="/login" class="btn btn-primary">Login</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>
